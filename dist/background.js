(()=>{"use strict";const e={annoProjectName:"",watchlist:["anno","",""]};chrome.action.onClicked.addListener((async t=>{if("number"!=typeof t.id)return;const{annoProjectName:o}=await chrome.storage.sync.get(e);if(!o)return void chrome.runtime.openOptionsPage();const n={type:"annotate",annoProjectName:o};chrome.tabs.sendMessage(t.id,n)}));const t=new Map,o=({tabId:e})=>{t.get(e)?.(),t.delete(e)},n=new Map,a=new Map;chrome.runtime.onMessage.addListener((async(s,r)=>{const c=r.tab?.id;if(!c)throw new Error("tabId is empty. ");"urlChange"===s.type&&await(async({tabId:s,url:r})=>{o({tabId:s});const c=(e=>{const t=new URL(e);return t.protocol=new Map([["http:","anno:"],["https:","annos:"]]).get(t.protocol)??t.protocol,decodeURI(String(t))})(r),i=[],{watchlist:l,annoProjectName:d}=await chrome.storage.sync.get(e);for(const e of new Set([d,...l])){if(!e)continue;let t=await a.get(e);if(void 0===t){const o=(async()=>{const t=await fetch(`https://scrapbox.io/api/projects/${encodeURIComponent(e)}`);return t.ok?await t.json():(console.error(`Failed to fetch project: ${t.status}`),null)})();a.set(e,o),t=await o}t&&i.push(t)}const p=new Map,h=[];for(const e of i){const t=await fetch(`https://scrapbox.io/api/pages/${encodeURIComponent(e.name)}/${encodeURIComponent(c)}?followRename=true`);if(!t.ok){console.error(`Failed to fetch page: ${t.status}`);continue}const o=await t.json(),a=[];let s=[];for(const e of o.lines.slice(1))e.text?s.push(e):(a.push(s),s=[]);a.push(s);for(const t of a)if(t.length)for(const o of t[0].text.matchAll(/\[[^\]]*\s(.*?)\]/g)){let a;try{a=new URLSearchParams(new URL(o[1]).hash)}catch{continue}const s=a.get("e");if(!s)continue;const r=[];for(const o of t[0].text.matchAll(/(\[?)\[([^\]]+)\.icon(?:\*([1-9]\d*))?\](\]?)/g)){const t=o[2],a=Number(o[3]??"1"),s=Boolean(o[1]&&o[4]),c=`/${e.name}/${t}`;let i=await n.get(c);if(void 0===i){const o=(async()=>{const o=await fetch(`https://scrapbox.io/api/pages/${encodeURIComponent(e.name)}/${encodeURIComponent(t)}`);if(!o.ok)return console.error(`Failed to fetch iconAPI: ${o.status}`),null;const{image:n}=await o.json(),a=await fetch(n);if(!a.ok)return console.error(`Failed to fetch the icon image: ${a.status}`),null;const s=new FileReader;return new Promise((async e=>{s.addEventListener("load",(()=>{if("string"!=typeof s.result)throw new Error("fileReader result is not string. ");e(s.result)})),s.readAsDataURL(await a.blob())}))})();n.set(c,o),i=await o}if(i)for(const e of Array(a).keys())r.push({url:i,isStrong:s})}r.length||r.push({url:e.image??"https://i.gyazo.com/1e3dbb79088aa1627d7e092481848df5.png",isStrong:!1});for(const o of r){const n=crypto.randomUUID(),r=o.isStrong?60:20;p.set(n,{url:`https://scrapbox.io/${encodeURIComponent(e.name)}/${encodeURIComponent(c)}#${t[0].id}`,description:t.slice(1).map((({text:e})=>e)).join("\n"),iconImageURL:o.url,iconSize:r});const i={textQuoteSelector:{prefix:a.get("p")??void 0,exact:s,suffix:a.get("s")??void 0},annotationURL:`${chrome.runtime.getURL("annotation.html")}?${new URLSearchParams({id:n})}`,iconSize:r};h.push(i)}}}await chrome.storage.local.set(Object.fromEntries(p));const m={type:"inject",configs:h};chrome.tabs.sendMessage(s,m),t.set(s,(async()=>{await chrome.storage.local.remove([...p.keys()])}))})({tabId:c,url:s.url})})),chrome.tabs.onRemoved.addListener((e=>{o({tabId:e})})),chrome.tabs.onReplaced.addListener(((e,t)=>{o({tabId:t})}))})();